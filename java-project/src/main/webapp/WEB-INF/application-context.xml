<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">
    
    <context:component-scan base-package="java100.app">
        <context:exclude-filter type="aspectj" 
            expression="java100.app.web.*"/>
    </context:component-scan>
             
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>   
        <property name="mapperLocations" value="classpath*:java100/app/dao/mysql/*Dao.xml"/>
        <property name="typeAliasesPackage" value="java100.app.domain"/> 
    </bean>
    
    <bean id="dataSource" 
          class="org.apache.commons.dbcp2.BasicDataSource" 
          destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 트랜잭션 관리자 추가 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    
     
     
    <context:property-placeholder location="classpath*:java100/app/jdbc.properties"/>
    
    <!-- 페이지 컨트롤러가 사용할 객체 설정 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
         <property name="messageConverters">
            <list>
             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="java100.app.dao" />
	</bean>
	


    <!-- 트랜잭션 작업을 수행할 advice 객체 등록 
         등록된 트랜잭션 관리자의 id가 transactionManager이 아니라면
         다음과 같이 transaction-manager 속성을 명시적으로 지정해야 한다
          transaction-manager="transactionManager"--> 
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- 메서드명이 list로 시작하는 경우 트랜잭션에서 제외한다 -->
            <tx:method name="list*" read-only="true"/>
            <!-- 게시글 조회인 경우 조회수를 변경해야 하기 때문에 read-only로 만들어서는 안된다 
            <tx:method name="get*" read-only="true"/>
             -->
            <!-- 그 외 모든 메서드에 대해, 그 메서드에서 수행하는 모든 작업은
                 한 작업으로 묶는다. 즉 같은 트랜잭션으로 다룬다. -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
   
	<!-- 트랜잭션 advice를 어떤 메서드에 적용할 것인지 지정한다. -->
	<aop:config>
        <!-- 트랜잭션 advice를 적용할 대상을 지정한다 -->
        <aop:pointcut id="serviceOperation" expression="execution(* java100.app.service..*ServiceImpl.*(..))"/>
    
        <!-- 위에서 선언한 트랜잭션 advice를 pointcut에 연결한다. -->        
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
        
    </aop:config>
	
	
	
</beans>















