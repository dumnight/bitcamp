<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">

    <context:component-scan base-package="java100.app"/>         
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>   
        <property name="mapperLocations" value="classpath*:java100/app/dao/mysql/*Dao.xml"/>
        <property name="typeAliasesPackage" value="java100.app.domain"/> 
    </bean>
    
    <bean id="dataSource" 
          class="org.apache.commons.dbcp2.BasicDataSource" 
          destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 트랜잭션 관리자 추가 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    
     
     
    <context:property-placeholder location="classpath*:java100/app/jdbc.properties"/>
    
    <!-- 페이지 컨트롤러가 사용할 객체 설정 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
         <property name="messageConverters">
            <list>
             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!-- 
    <bean id="multipartReslover"
        class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>
     -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="java100.app.dao" />
	</bean>
	
	<!-- 인터셉터를 등록한다. -->
	
	<mvc:interceptors>
	   <mvc:interceptor>
	       <mvc:mapping path="/**"/>
	       <mvc:exclude-mapping path="/auth/**"/>
	       <bean class="java100.app.web.Interceptor.AuthInterceptor"/>
	   </mvc:interceptor>  
	</mvc:interceptors> 
	
	<!-- MultipartResolver 설정 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>


    <!-- 애노테이션을 이용하여 트랜잭션을 다루는 객체 목록
         즉 @transctional 애노테이션을 처리할 객체 등록 
         이 객체는 트랜잭션 관리자가 필요한데 만약 등록된 트랜잭션 관리자의
         이름이 transactionManager가 아니라면 다음의 속성을 추가해야 된다
         예) transaction-manager="transactionManager" -->
    <tx:annotation-driven/>
	
</beans>















